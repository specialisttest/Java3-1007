Лабораторная 1.1
 Сделать два потока которые выодят числа в определенном диапазоне.
 Диапазон каждому потоку нужно передавать отдельно.
 
 Сделать 2 потока: A и B.
  Потоку А указать присоздании диапазон 1 до 100
  Потоку B указать присоздании диапазон 101 до 200
  Запустить потоки параллельно.


Лабораторная 1.2
  
 Сделать 2 потока, каждый из которых выводит числа от 1 до 1000
  Запустить их параллельно.
  Синхронизировать потоки так, чтобы поток t1 начал работать не раньше чем завершится t0
  
  Эксперимент 1
  	Поставить задержку в 300ms между запусками потоков t0 и t1
  Эксперимент 2
  	Поменять порядок запуска потоков t0 и t1 сохранив задержку
  
Лабораторная 1.3

Сделать 2 потока:
	1. Вычисляет x = sin(x) и печатает
	2. Вычисляет x = asin(x) и печатает
	Запустить эти потоки, чтобы они работали в противофазе

 /*
 * class Sync {
 * 	volatile double x = 1;
 *	volatile boolean phase = true;
 * }
 * 
 * 
 * Thread-0:
 * 	x = Math.sin(x)
 *  out.println(x)
 * 
 * 
 * Thread-1:
 * 	x = Math.asin(x)
 *  out.println(x)
 * 
 */  

Лабораторная 1.4
 Распараллелить алгоритм вычисления интеграла из проекта Integral 
(использовать Thread и/или пулы потоков)

Лабораторная 1.5
 Распараллелить алгоритм вычисления интеграла из проекта Integral 
(использовать ForkJoinTask)


Лабораторная 1.6
  Переделать SocketServer в многопоточный вариант,
  чтобы он мог надёжно обработать 100 запросов одновременно,
  используя пулы потоков.
  

 Лабораторная 2.1
  Дополнить DBSelect:
   Пользователь в консоли вводит строку поиска.
   Программа выводит список курсов, в названии которых есть указанное слово поиска  используя WHERE title LIKE ? используя PreparedStatement 


 