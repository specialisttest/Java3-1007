Лабораторная 1.1
 Сделать два потока которые выодят числа в определенном диапазоне.
 Диапазон каждому потоку нужно передавать отдельно.
 
 Сделать 2 потока: A и B.
  Потоку А указать присоздании диапазон 1 до 100
  Потоку B указать присоздании диапазон 101 до 200
  Запустить потоки параллельно.


Лабораторная 1.2
  
 Сделать 2 потока, каждый из которых выводит числа от 1 до 1000
  Запустить их параллельно.
  Синхронизировать потоки так, чтобы поток t1 начал работать не раньше чем завершится t0
  
  Эксперимент 1
  	Поставить задержку в 300ms между запусками потоков t0 и t1
  Эксперимент 2
  	Поменять порядок запуска потоков t0 и t1 сохранив задержку
  
Лабораторная 1.3

Сделать 2 потока:
	1. Вычисляет x = sin(x) и печатает
	2. Вычисляет x = asin(x) и печатает
	Запустить эти потоки, чтобы они работали в противофазе

 /*
 * class Sync {
 * 	volatile double x = 1;
 *	volatile boolean phase = true;
 * }
 * 
 * 
 * Thread-0:
 * 	x = Math.sin(x)
 *  out.println(x)
 * 
 * 
 * Thread-1:
 * 	x = Math.asin(x)
 *  out.println(x)
 * 
 */  

Лабораторная 1.4
 Распараллелить алгоритм вычисления интеграла из проекта Integral 
(использовать Thread и/или пулы потоков)

Лабораторная 1.5
 Распараллелить алгоритм вычисления интеграла из проекта Integral 
(использовать ForkJoinTask)


Лабораторная 1.6
  Переделать SocketServer в многопоточный вариант,
  чтобы он мог надёжно обработать 100 запросов одновременно,
  используя пулы потоков.
  

 Лабораторная 2.1
  Дополнить DBSelect:
   Пользователь в консоли вводит строку поиска.
   Программа выводит список курсов, в названии которых есть указанное слово поиска  используя WHERE title LIKE ? используя PreparedStatement 


Лабораторная 2.2
  
 Пользователь в консоли вводит название нового курса,
   длительность и описание.
   Выполняется команда INSERT, используя PreparedStatement, методом executeUpdate
   INSERT INTO courses (title, length, description) VALUES (?, ?, ?)
    

Лабораторная 2.3
 Создать хранимую процедуру:
 CREATE DEFINER=`root`@`localhost` PROCEDURE `countCourses`( OUT c int(11))
   BEGIN
		SET c = (SELECT COUNT(*) FROM courses);
   END
 
 С помощью интерфейса DatabaseMetaData вывести список хранимых процедур.


Лабораторная 3.1
  1. Создать класс (или record) Book с 2 полями: title, price
  2. Создать коллекцию книг.
  3. Найти минимальную, максимальную и среднюю цены на книги,
	  используя функциональный стиль.
  5. Напечатать списоок книг с минимальной и максимальной цена

Лабораторная 4.1
  1. Создать проект MyModule (с module-info.java)
  2. Создать в нём класс с функцией
  3. Определить сам модуль (в файле module-info) и экспортировать пакет вашего класса
  4. Сделать второй проект MyClient (c module-info)
  5. В свойствах проекта MyClient (Build path) указать ссылку на первый проект (Projects -> Module path)
  6. В module-info второго проекта добавить requires на первый проект
  7. Задействовать класс и функцию из первого проекта во втором.



  
 
 
   
  